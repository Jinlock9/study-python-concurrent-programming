"""  # =================================================================================================================
Section 3 - coroutine
------------------------------------------------------------------------------------------------------------------------
[ Routine ]-------------------------------------------------------------------------------------------------------------
일련의 명령 (코드의 흐름)
[ Main Routine ] -------------------------------------------------------------------------------------------------------
- 프로그램의 메인 코드의 흐름
------------------------------------------------------------------------------------------------------------------------
[ Sub Routine ] --------------------------------------------------------------------------------------------------------
- 우리가 알고 있는 보통의 함수나 메소드 (메인 루틴을 보조하는 역할)
- 프로그램이 실행되면 서브 루틴은 별도의 공간(scope)에 해당 로직들을 모아 놓고 있다. 
  서브 루틴이 호출이 될 때, 해당하는 로직들의 공간으로 이동했다가 return을 통해 원래 호출 시점(메인 루틴)으로 돌아오게 된다.
- 하나의 진입점과 하나의 탈출점이 있는 루틴이다.
------------------------------------------------------------------------------------------------------------------------
[ Coroutine ] ----------------------------------------------------------------------------------------------------------
- 서브 루틴의 일반화된 형태
- 다양한 진입점과 다양한 탈출점이 있는 루틴이다.
- 파이썬 비동기 함수는 코루틴 함수로 만들 수 있다.
------------------------------------------------------------------------------------------------------------------------
[ awaitable object ] ---------------------------------------------------------------------------------------------------
- await 뒤에는 awaitable object 가 와야한다.
 - coroutine
 - task
 - future
------------------------------------------------------------------------------------------------------------------------
"""  # =================================================================================================================
# import ===============================================================================================================
import time
import asyncio
# ======================================================================================================================
# https://docs.python.org/ko/3/library/asyncio-task.html


async def hello_world():
    print("hello world")
    return 123


if __name__ == "__main__":
    # await hello_world() : !! await 은 async 안에서 실행되어야 한다.
    asyncio.run(hello_world())
